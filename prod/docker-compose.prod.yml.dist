# Use postgres/example user/password credentials
version: "3.6"
services:
  db:
    container_name: db-prod
    build:
      context: ../db
      dockerfile: Dockerfile.db
    command:
      [
        "postgres",
        "-c",
        "shared_preload_libraries=pgaudit",
        "-c",
        "logging_collector=on",
        "-c",
        "log_statement=all",
        "-c",
        "log_directory=./log",
      ]
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: 12345
      POSTGRES_DB: db
      PGDATA: /data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - ../db/prod:/data/pgdata
    restart: unless-stopped

  server:
    container_name: server-prod
    build:
      context: ../
      dockerfile: ./prod/Dockerfile.server
    environment:
      - "NODE_ENV=production"
    depends_on:
      - db
    command: sh -c "echo 'starting server' && yarn run prod"
    restart: unless-stopped

  client:
    container_name: client-prod
    build:
      context: ../
      dockerfile: ./prod/Dockerfile.client
    environment:
      - "NODE_ENV=production"
    volumes:
      - ./nginx.prod.conf:/etc/nginx/conf.d/default.conf
      - /etc/letsencrypt:/etc/letsencrypt
    depends_on:
      - db
      - server
    ports:
      - "80:80"
      - "443:443"
    command: sh -c "echo 'starting client' && nginx -g 'daemon off;'"
    restart: unless-stopped
